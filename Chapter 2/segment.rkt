#lang sicp
;ex2.2
;平面线段的表示
(define (make-point x y)
    (cons x y))
(define (x-point point)
    (car point))
(define (y-point point)
    (cdr point))
(define (print-point point)
    (display "(")
    (display (x-point point))
    (display ",")
    (display (y-point point))
    (display ")")
    (newline))
(define (make-segment point-x point-y)
    (cons point-x point-y))
(define (start-segment segment)
    (car segment))
(define (end-segment segment)
    (cdr segment))
(define (average a b)
    (/ (+ a b) 2))
(define (mid-point segment)
    (make-point (average (x-point (start-segment segment))
                         (x-point (end-segment segment)))
                (average (y-point (start-segment segment))
                         (y-point (end-segment segment)))))
(print-point (mid-point (make-segment (make-point 1 1)
                                      (make-point 2 2))))
;ex2.3
;矩阵定义
(define (square x)
    (* x x))
(define (segment-length segment)
    (sqrt (+ (square (- (x-point (start-segment segment))
                        (x-point (end-segment segment))))
             (square (- (y-point (start-segment segment))
                        (y-point (end-segment segment)))))))

;segment-length test
(segment-length (make-segment (make-point 1 1) (make-point 2 2)))

(define (make-rectangle segment-a segment-b)
    (cons segment-a segment-b))
(define (a-segment rectangle)
    (car rectangle))
(define (b-segment rectangle)
    (cdr rectangle))
(define (rectangle-area rectangle)
    (* (segment-length (a-segment rectangle))
       (segment-length (b-segment rectangle))))
(define (rectangle-circumference rectangle)
    (* 2
       (+ (segment-length (a-segment rectangle))
          (segment-length (b-segment rectangle)))))
(define my-rect
    (make-rectangle (make-segment (make-point 1 1)
                                  (make-point 1 2))
                    (make-segment (make-point 1 1)
                                  (make-point 3 1))))
(rectangle-area my-rect)
(rectangle-circumference my-rect)
