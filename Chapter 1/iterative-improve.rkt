#lang sicp
(define (iterative-improve good-enough? improve)
    (define (try guess)
        (if (good-enough? guess)
            guess
            (try (improve guess))))
    try)
(define (square x)
    (* x x))
(define (average a b)
    (/ (+ a b) 2))
(define (square-root x)
    (define (good-enough? guess)
        (< (abs (- (square guess) x)) 0.0001))
    (define (improve guess)
        (average guess (/ x guess)))
    ((iterative-improve good-enough? improve) 1.0))
(square-root 10)
